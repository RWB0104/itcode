{"version":3,"file":"bb1dd588-50cbbb81404d7aa76be2.js","mappings":"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","sources":["webpack://itcode.dev/./.yarn/__virtual__/framer-motion-virtual-94d9cddadf/0/cache/framer-motion-npm-10.12.16-15fa41631a-0ba346fd6e.zip/node_modules/framer-motion/dist/cjs/index-legacy-1136d0d0.js"],"sourcesContent":["'use strict';\n\nconst isBrowser = typeof document !== \"undefined\";\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nconst variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nconst featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\n/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nconst isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nconst checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nconst clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\n/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nconst isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\n/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nfunction renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nfunction scrapeMotionValuesFromProps$1(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nfunction resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nconst isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nconst frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nconst maxElapsed$1 = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed$1), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nconst noop = (any) => any;\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexports.warning = noop;\nexports.invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    exports.warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    exports.invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nconst instantAnimationState = {\n    current: false,\n};\n\nconst isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nconst featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\n// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        exports.invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        exports.invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\n/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\n// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    exports.invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone$1(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone: getAnimatableNone$1,\n};\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer$1(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer$1(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer$1(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        exports.warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\n/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    exports.invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nfunction defaultOffset$1(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset$1(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\n/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration$1 = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    exports.warning(duration <= secondsToMilliseconds(maxDuration$1), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration$1, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition$1(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition$1(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        exports.warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nfunction addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nconst warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\n/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\n/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nconst distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nconst createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nfunction isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            exports.invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nconst visualElementStore = new WeakMap();\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nfunction isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nfunction isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    exports.invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    exports.invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    exports.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? exports.warning(false, strictMessage)\n                : exports.invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nfunction getComputedStyle$1(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle$1(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps$1(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\n/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nconst wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nfunction compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset$1(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n            prevTime = currentTime;\n            currentTime += maxDuration;\n        }\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    exports.invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nconst windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nfunction calcInset(element, container) {\n    let inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n            const { top, left } = current.getBBox();\n            inset.x += left;\n            inset.y += top;\n            /**\n             * Assign the next parent element as the <svg /> tag.\n             */\n            while (current && current.tagName !== \"svg\") {\n                current = current.parentNode;\n            }\n        }\n    }\n    return inset;\n}\n\nconst ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nconst namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nconst point = { x: 0, y: 0 };\nfunction resolveOffsets(container, info, options) {\n    let { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : { width: target.clientWidth, height: target.clientHeight };\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset$1(offsetDefinition));\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scroll(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.update(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nfunction getOriginIndex(from, total) {\n    if (from === \"first\") {\n        return 0;\n    }\n    else {\n        const lastIndex = total - 1;\n        return from === \"last\" ? lastIndex : lastIndex / 2;\n    }\n}\nfunction stagger(duration = 0.1, { startDelay = 0, from = 0, ease } = {}) {\n    return (i, total) => {\n        const fromIndex = typeof from === \"number\" ? from : getOriginIndex(from, total);\n        const distance = Math.abs(fromIndex - i);\n        let delay = duration * distance;\n        if (ease) {\n            const maxDelay = total * duration;\n            const easingFunction = easingDefinitionToFunction(ease);\n            delay = easingFunction(delay / maxDelay) * maxDelay;\n        }\n        return startDelay + delay;\n    };\n}\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\n/**\n * @deprecated\n *\n * Import as `frame` instead.\n */\nconst sync = frame;\n/**\n * @deprecated\n *\n * Use cancelFrame(callback) instead.\n */\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = (process) => cancelFrame(process);\n    return acc;\n}, {});\n\nexports.HTMLVisualElement = HTMLVisualElement;\nexports.MotionValue = MotionValue;\nexports.SVGVisualElement = SVGVisualElement;\nexports.SubscriptionManager = SubscriptionManager;\nexports.VisualElement = VisualElement;\nexports.addScaleCorrector = addScaleCorrector;\nexports.addUniqueItem = addUniqueItem;\nexports.animate = animate;\nexports.animateMotionValue = animateMotionValue;\nexports.animateSingleValue = animateSingleValue;\nexports.animateStyle = animateStyle;\nexports.animateTarget = animateTarget;\nexports.animateValue = animateValue;\nexports.anticipate = anticipate;\nexports.applyBoxDelta = applyBoxDelta;\nexports.applyTreeDeltas = applyTreeDeltas;\nexports.backIn = backIn;\nexports.backInOut = backInOut;\nexports.backOut = backOut;\nexports.buildHTMLStyles = buildHTMLStyles;\nexports.buildSVGAttrs = buildSVGAttrs;\nexports.buildTransform = buildTransform;\nexports.camelToDash = camelToDash;\nexports.cancelFrame = cancelFrame;\nexports.cancelSync = cancelSync;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.circIn = circIn;\nexports.circInOut = circInOut;\nexports.circOut = circOut;\nexports.clamp = clamp;\nexports.color = color;\nexports.complex = complex;\nexports.convertBoundingBoxToBox = convertBoundingBoxToBox;\nexports.convertBoxToBoundingBox = convertBoxToBoundingBox;\nexports.createBox = createBox;\nexports.createDelta = createDelta;\nexports.createScopedAnimate = createScopedAnimate;\nexports.cubicBezier = cubicBezier;\nexports.delay = delay;\nexports.distance = distance;\nexports.distance2D = distance2D;\nexports.easeIn = easeIn;\nexports.easeInOut = easeInOut;\nexports.easeOut = easeOut;\nexports.featureDefinitions = featureDefinitions;\nexports.frame = frame;\nexports.frameData = frameData;\nexports.getOrigin = getOrigin;\nexports.getValueTransition = getValueTransition$1;\nexports.has2DTranslate = has2DTranslate;\nexports.hasReducedMotionListener = hasReducedMotionListener;\nexports.hasScale = hasScale;\nexports.hasTransform = hasTransform;\nexports.inView = inView;\nexports.initPrefersReducedMotion = initPrefersReducedMotion;\nexports.instantAnimationState = instantAnimationState;\nexports.interpolate = interpolate;\nexports.isAnimationControls = isAnimationControls;\nexports.isBrowser = isBrowser;\nexports.isCSSVariableName = isCSSVariableName;\nexports.isControllingVariants = isControllingVariants;\nexports.isCustomValue = isCustomValue;\nexports.isForcedMotionValue = isForcedMotionValue;\nexports.isKeyframesTarget = isKeyframesTarget;\nexports.isMotionValue = isMotionValue;\nexports.isRefObject = isRefObject;\nexports.isSVGElement = isSVGElement;\nexports.isSVGTag = isSVGTag;\nexports.isVariantLabel = isVariantLabel;\nexports.isVariantNode = isVariantNode;\nexports.measurePageBox = measurePageBox;\nexports.millisecondsToSeconds = millisecondsToSeconds;\nexports.mirrorEasing = mirrorEasing;\nexports.mix = mix;\nexports.motionValue = motionValue;\nexports.moveItem = moveItem;\nexports.noop = noop;\nexports.optimizedAppearDataAttribute = optimizedAppearDataAttribute;\nexports.optimizedAppearDataId = optimizedAppearDataId;\nexports.percent = percent;\nexports.pipe = pipe;\nexports.prefersReducedMotion = prefersReducedMotion;\nexports.progress = progress;\nexports.px = px;\nexports.removeItem = removeItem;\nexports.renderSVG = renderSVG;\nexports.resolveVariant = resolveVariant;\nexports.resolveVariantFromProps = resolveVariantFromProps;\nexports.reverseEasing = reverseEasing;\nexports.scaleCorrectors = scaleCorrectors;\nexports.scalePoint = scalePoint;\nexports.scrapeMotionValuesFromProps = scrapeMotionValuesFromProps;\nexports.scrapeMotionValuesFromProps$1 = scrapeMotionValuesFromProps$1;\nexports.scroll = scroll;\nexports.secondsToMilliseconds = secondsToMilliseconds;\nexports.setValues = setValues;\nexports.spring = spring;\nexports.stagger = stagger;\nexports.steps = steps;\nexports.stepsOrder = stepsOrder;\nexports.sync = sync;\nexports.transform = transform;\nexports.transformBox = transformBox;\nexports.transformProps = transformProps;\nexports.translateAxis = translateAxis;\nexports.variantPriorityOrder = variantPriorityOrder;\nexports.visualElementStore = visualElementStore;\nexports.warnOnce = warnOnce;\nexports.wrap = wrap;\n"],"names":["isBrowser","document","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layoutId","has","startsWith","undefined","isMotionValue","value","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","buildTransform","transform","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","i","trim","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","clamp","min","max","Math","number","test","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","tag","toLowerCase","camelToDash","str","replace","renderHTML","element","styleProp","projection","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","prevProps","newValues","scrapeMotionValuesFromProps","indexOf","charAt","toUpperCase","substring","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","combineFunctions","a","b","pipe","transformers","reduce","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","forEach","requestAnimationFrame","frame","cancelFrame","noop","any","resolveVariant","visualElement","getProps","current","values","get","getCurrent","velocity","optimizedAppearDataId","optimizedAppearDataAttribute","exports","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","animateStyle","valueName","keyframes","delay","duration","repeat","repeatType","times","keyframeOptions","fill","iterations","direction","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","p","reverseEasing","sin","acos","circInOut","backInOut","anticipate","pow","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","mix","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","info","matches","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","includes","parseComplexValue","createTransformer","source","numValues","output","convertNumbersToZero","complex","_a","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","target","getMixer$1","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset$1","arr","keyframeValues","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","next","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration$1","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","driver","keyframes$1","repeatDelay","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition$1","transition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","constructor","this","subscriptions","handler","notify","numSubscriptions","getSize","clear","warned","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","render","prev","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","eventName","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","resolved","transitionEnd","makeTargetAnimatable","setVariants","variantLabels","variant","getVariant","variantChildren","child","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","transitionOrigin","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","appearId","shouldReduceMotion","remove","all","createBox","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","resolveElements","elements","scope","selectorCache","root","querySelectorAll","visualElementStore","WeakMap","GroupPlaybackControls","onResolve","onReject","catch","getAll","propName","setAll","newValue","runAll","methodName","isSVGElement","SVGElement","tagName","splitCSSVariableRegex","maxDepth","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","parent","presenceContext","reducedMotionConfig","visualState","children","Map","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initial","manuallyAnimateOnMount","initialMotionValues","_props","_prevProps","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","unmount","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","loadFeatures","renderedProps","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","Feature","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","dragConstraints","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","updateFeatures","feature","isMounted","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","prevPresenceContext","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getTransformPagePoint","transformPagePoint","getClosestVariantNode","getVariantContext","startAtParent","context","prop","closestVariantNode","removeValueFromRenderState","readValueFromInstance","getBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","transformValues","SVGVisualElement","super","arguments","defaultType","getAttribute","HTMLVisualElement","computedStyle","childSubscription","textContent","createVisualElement","node","animateSingleValue","motionValue$1","createGeneratorEasing","calcNextTime","labels","wrap","rangeSize","getEasingForSegment","addKeyframes","sequence","endTime","keyframe","at","eraseKeyframes","compareByTime","defaultSegmentEasing","getSubjectSequence","subject","sequences","getValueSequence","keyframesAsList","getValueTransition","isNumber","isNumberKeyframesArray","animateElements","elementOrSelector","numElements","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","defaultDuration","elementCache","timeLabels","prevTime","segment","maxDuration","resolveValueSequence","valueKeyframes","valueSequence","elementIndex","valueKeyframesAsList","remainingTransition","calculatedDelay","absoluteDelta","springTransition","springEasing","targetTime","remainder","unshift","subjectSequence","valueSequences","sort","valueOffset","valueEasing","createAnimationsFromSequence","createScopedAnimate","valueOrElementOrSequence","isDOMKeyframes","resizeHandlers","observer","notifyTarget","contentRect","borderBoxSize","contentSize","inlineSize","blockSize","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elementHandlers","observe","unobserve","windowCallbacks","windowResizeHandler","resizeWindow","innerWidth","innerHeight","addEventListener","maxElapsed","position","updateAxisInfo","axisName","scrollLength","ScrollOffset","Enter","Exit","Any","All","namedEdges","center","end","resolveEdge","edge","inset","asNumber","documentElement","clientWidth","clientHeight","defaultOffset","resolveOffset","containerLength","targetLength","targetInset","offsetDefinition","targetPoint","containerPoint","resolveOffsets","container","lengthLabel","offsetLeft","offsetTop","offsetParent","SVGGraphicsElement","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","containerSize","hasChanged","numOffsets","interpolatorOffsets","createOnScrollHandler","onScroll","measure","targetOffset","updateScrollInfo","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","thresholds","sync","cancelSync","addScaleCorrector","correctors","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","projectionDelta","scroll","convertBoxToBoundingBox","createDelta","timeout","checkElapsed","distance2D","xDelta","yDelta","onStart","rootMargin","amount","activeIntersections","IntersectionObserver","entry","onEnd","isIntersecting","newOnEnd","threshold","disconnect","isCustomValue","toValue","measurePageBox","rootProjectionNode","viewportBox","moveItem","toIndex","startIndex","endIndex","containerHandlers","containerHandler","measureAll","updateAll","passive","currentHandlers","scrollListener","removeEventListener","setValues","stagger","startDelay","total","lastIndex","getOriginIndex","maxDelay","useImmediate","argOffset","inputValue","inputRange","outputRange","isCustomValueType","warnOnce","condition","message","console","warn"],"sourceRoot":""}